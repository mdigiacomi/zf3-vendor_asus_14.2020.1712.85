#!/system/bin/sh 
default="-1"
record="1"
frametime="33333"
second=$((30*$frametime))
timeout=$((25*$second))
timeout_short=$((5*$second))
PD_dac="100"
TAG="CameraAFCali"
Version="3.0.1"

#$1 = camdir(0: rear, 1: front, 2: rear2)
#$2 = scene (0: result, 1: inf, 2: macro, 3: thirty, 4: fifty) PD/laser switch (8: laser 9: PD)
#$3 = func  (0: record Vertical calibration 1: OTP search 2: Horizon calibration and record 3: get PD data diff 4: record laser data)
#			(5: check PDAF result 6: check laser AF result 7: move VCM to Contrast AF BestPos 8: record Laser BestPos 9: record PDAF BestPos ) PD/laser switch (0: OFF 3: ON)

function printlog(){
	log -p d -t $TAG ${1}
}

function polling(){				
	count=0;
	result=0;
	while [ $(($count)) -lt ${1} ]; do
		count=$(($count + $frametime));
		usleep $frametime
		#echo count=$count;
		value=`getprop media.camera.debug.return`
		#echo value = $value
				
		if [ "$value" != "$default" ]; then
			result=1;
			break;
		fi
	done;
}

function echowithlog(){
	printlog "saving "${2}
	echo ${1} > ${2}
	printlog "saving "${1}" in "${2}
}

printlog "dit_af_cali start"

# set CameraProcess(by CamerDir)
# echo cmd = $2 ON/OFF = $3
case $1 in
	"0")
		setprop media.camera.debug.param2 1
		setprop media.camera.debug.param1 44
		polling $second
		setprop media.camera.debug.param1 -1
	;;
	"2")
		setprop media.camera.debug.param2 4
		setprop media.camera.debug.param1 44
		polling $second
		setprop media.camera.debug.param1 -1
	;;
esac

case $2 in
	"0")
		# run AF calibration
		/system/bin/test_afCaliDB $1 0
		echo 1
	;;
	"1")
		case $3 in
			"0")
				# record infinity best focused VCM position
				/system/bin/test_afCaliDB $1 1
				echo 1			
			;;
			"1")		
				# move VCM to OTP infinity and search short range
				value=`/system/bin/test_afCaliDB $1 3`
				#echo value = $value
				range=`/system/bin/test_afCaliDB $1 9`
				#echo range = $range
				coarse_dac=`/system/bin/test_afCaliDB $1 13`
				#echo coarse_dac = $coarse_dac
				fine_dac=`/system/bin/test_afCaliDB $1 14`
				#echo fine_dac = $fine_dac
				
					
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param5 "$fine_dac"
				setprop media.camera.debug.param4 "$coarse_dac"
				setprop media.camera.debug.param3 "$range"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 7
				polling $timeout
		
				echo $result

			;;
			"2")		
				# full search near OTP infinity
				value=`/system/bin/test_afCaliDB $1 3`
				#echo value = $value
				range=`/system/bin/test_afCaliDB $1 10`
				#echo range = "$range"
				coarse_dac=`/system/bin/test_afCaliDB $1 13`
				#echo coarse_dac = $coarse_dac
				fine_dac=`/system/bin/test_afCaliDB $1 14`
				#echo fine_dac = $fine_dac
					
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param5 "$fine_dac"
				setprop media.camera.debug.param4 "$coarse_dac"
				setprop media.camera.debug.param3 "$range"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 7

				polling $timeout
				
				echo $result
				#record infinity Horizon best focused VCM position
				/system/bin/test_afCaliDB $1 2
			;;
			3)
				# move VCM from bestPos
				value=`/system/bin/test_afCaliDB $1 40`
				
				PD_dac=`/system/bin/test_afCaliDB $1 25`
				
				echowithlog $PD_dac /data/data/pd_shift_inf.txt
				
				value=$(($value + $PD_dac));
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				
				#delay for PD converge
				usleep 200000
				
				# read PD data and save to file
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param1 43
				polling $timeout_short
				
				infpd=`/system/bin/test_afCaliDB $1 42`
				echowithlog $value $infpd
				
				#get PD diff data and check in testplan
				value=`/system/bin/test_afCaliDB $1 20`
				echowithlog $value /data/data/pd_inf_diff.txt
				echo $result
				
			;;
			5)
				#save PDAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 30`
				echowithlog $value /data/data/pd_vcm_inf_diff.txt
				echo 1
			;;
			6)
				#save Laser bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 34`
				echowithlog $value /data/data/laser_vcm_inf_diff.txt
				echo 1
			;;
			7)
				#move VCM to Contrast AF BestPos
				value=`/system/bin/test_afCaliDB $1 40`
								
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short

				echo $result
			;;
			8)
				#save Laser bestpos
				/system/bin/test_afCaliDB $1 54
				echo 1			
			;;
			9)
				#save PDAF bestpos
				/system/bin/test_afCaliDB $1 50
				echo 1			
			;;
			*)
				echo "Invalid argument!!(par2 : commandID = 0~9)"
			;;
		esac
	;;
	
	"2")
		case $3 in
			"0")
				# record macro best focused VCM position
				/system/bin/test_afCaliDB $1 4
				echo 1			
			;;
			"1")		
				# move VCM to OTP macro and search short range
				value=`/system/bin/test_afCaliDB $1 6`
				#echo value = $value
				range=`/system/bin/test_afCaliDB $1 11`
				#echo range = $range
				coarse_dac=`/system/bin/test_afCaliDB $1 13`
				#echo coarse_dac = $coarse_dac
				fine_dac=`/system/bin/test_afCaliDB $1 14`
				#echo fine_dac = $fine_dac
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param5 "$fine_dac"
				setprop media.camera.debug.param4 "$coarse_dac"
				setprop media.camera.debug.param3 "$range"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 7
				polling $timeout
				
				echo $result
			
			;;
			"2")		
				# full search near OTP macro
				value=`/system/bin/test_afCaliDB $1 6`
				#echo value = $value
				range=`/system/bin/test_afCaliDB $1 12`
				#echo range = $range
				coarse_dac=`/system/bin/test_afCaliDB $1 13`
				#echo coarse_dac = $coarse_dac
				fine_dac=`/system/bin/test_afCaliDB $1 14`
				#echo fine_dac = $fine_dac
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param5 "$fine_dac"
				setprop media.camera.debug.param4 "$coarse_dac"
				setprop media.camera.debug.param3 "$range"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 7
				
				polling $timeout
				
				echo $result
				#record Horizon best focused VCM Macro position
				/system/bin/test_afCaliDB $1 5
			;;
			3)
				# move VCM from bestPos
				
				value=`/system/bin/test_afCaliDB $1 43`
				
				
				PD_dac=`/system/bin/test_afCaliDB $1 25`
				
				echowithlog $PD_dac /data/data/pd_shift_macro.txt
				value=$(($value - $PD_dac));
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				
				if [ "$result" == "0" ]; then
					echo 0
					exit 0
				fi
				#delay for PD converge
				usleep 200000
				
				# read PD data and save to file
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param1 43
				polling $timeout_short
				
				macropd=`/system/bin/test_afCaliDB $1 45`
				echowithlog $value $macropd

				#get PD diff data and check in testplan
				value=`/system/bin/test_afCaliDB $1 23`
				echowithlog $value /data/data/pd_macro_diff.txt
				echo $result
			;;
			5)
				#save PDAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 33`
				echowithlog $value /data/data/pd_vcm_macro_diff.txt
				echo 1
			;;
			6)
				#save LaserAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 37`
				echowithlog $value /data/data/laser_vcm_macro_diff.txt
				echo 1
			;;
			7)
				#move VCM to Contrast AF BestPos
				value=`/system/bin/test_afCaliDB $1 43`
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				echo $result
			;;
			8)
				#save Laser bestpos
				/system/bin/test_afCaliDB $1 55
				echo 1			
			;;
			9)
				#save PDAF bestpos
				/system/bin/test_afCaliDB $1 51
				echo 1			
			;;
			*)
				echo "Invalid argument!!(par2 : commandID = 0~9)"
			;;
		esac
	;;
	"3")
		case $3 in
			"0")
				# record thirty best focused VCM position
				/system/bin/test_afCaliDB $1 7
				echo 1			
			;;
			3)
				# move VCM from bestPos
				value=`/system/bin/test_afCaliDB $1 46`
				
				PD_dac=`/system/bin/test_afCaliDB $1 25`
				
				echowithlog $PD_dac /data/data/pd_shift_30cm.txt
								
				value=$(($value + $PD_dac));
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				
				if [ "$result" == "0" ]; then
						echo 0
						exit 0
				fi
				
				#delay for PD converge
				usleep 200000
				
				# read PD data and save to file
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param1 43
				polling $timeout_short
				
				thirtypd=`/system/bin/test_afCaliDB $1 47`
				echowithlog $value $thirtypd
				
				#get PD diff data and check in testplan
				value=`/system/bin/test_afCaliDB $1 22`
				
				echowithlog $value /data/data/pd_30cm_diff.txt
				echo $result
			;;
			5)
				#save PDAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 32`
				echowithlog $value /data/data/pd_vcm_30cm_diff.txt
				echo 1
			;;
			6)
				#save LaserAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 36`
				echowithlog $value /data/data/laser_vcm_30cm_diff.txt
				echo 1
			;;
			7)
				#move VCM to Contrast AF BestPos
				value=`/system/bin/test_afCaliDB $1 46`
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				echo $result
			;;
			8)
				#save Laser bestpos
				/system/bin/test_afCaliDB $1 56
				echo 1			
			;;
			9)
				#save PDAF bestpos
				/system/bin/test_afCaliDB $1 52
				echo 1			
			;;
			*)
				echo "Invalid argument!!(par2 : commandID = 0~9)"
			;;
		esac
	;;
	"4")
		case $3 in
			"0")
				# record fifty best focused VCM position
				/system/bin/test_afCaliDB $1 8
				echo 1			
			;;
			3)
				# move VCM from bestPos
				value=`/system/bin/test_afCaliDB $1 48`
				
				PD_dac=`/system/bin/test_afCaliDB $1 25`
				
				echowithlog $PD_dac /data/data/pd_shift_50cm.txt
								
				value=$(($value + $PD_dac));
				
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				
				if [ "$result" == "0" ]; then
						echo 0
						exit 0
				fi
				#delay for PD converge
				usleep 200000
				
				# read PD data and save to file
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param1 43
				polling $timeout_short
				
				fiftypd=`/system/bin/test_afCaliDB $1 49`
				echowithlog $value $fiftypd
				
				#get PD diff data and check in testplan
				value=`/system/bin/test_afCaliDB $1 21`
				
				echowithlog $value /data/data/pd_50cm_diff.txt
				echo $result

			;;
			5)
				#save PDAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 31`
				echowithlog $value /data/data/pd_vcm_50cm_diff.txt
				echo 1

			;;
			6)
				#save PDAF bestpos and check DAC diff
				value=`/system/bin/test_afCaliDB $1 35`
				echowithlog $value /data/data/laser_vcm_50cm_diff.txt
				echo 1
			;;
			7)
				#move VCM to Contrast AF BestPos
				fiftypath=`/system/bin/test_afCaliDB $1 49`
				value=`cat $fiftypath`
				setprop media.camera.debug.return "$default"
				setprop media.camera.debug.param2 "$value"
				setprop media.camera.debug.param1 0
				polling $timeout_short
				echo $result
			;;
			8)
				#save Laser bestpos
				/system/bin/test_afCaliDB $1 57
				echo 1			
			;;
			9)
				#save PDAF bestpos
				/system/bin/test_afCaliDB $1 53
				echo 1			
			;;
			*)
				echo "Invalid argument!!(par2 : commandID = 0~9)"
			;;
		esac
	;;
	"8")
		# set laser ON/OFF
		# echo cmd = $2 ON/OFF = $3
		setprop media.camera.debug.return "$default"
		setprop media.camera.debug.param2 "$3"
		setprop media.camera.debug.param1 "$2"
		polling $timeout_short
		echo $result	
	;;
	"9")
		# set PD ON/OFF
		# echo cmd = $2 ON/OFF = $3
		setprop media.camera.debug.return "$default"
		setprop media.camera.debug.param2 "$3"
		setprop media.camera.debug.param1 "$2"
		polling $timeout_short
		echo $result	
	;;
	*)
	    echo "Invalid argument!!(par2 : commandID = 0~9)"
	;;
esac
printlog "dit_af_cali done"
exit 0